  pch.cpp
  main.cpp
c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultstructures.hpp(58): warning C4250: 'FaultyLine<_valueType>': inherits 'Faulty<_valueType>::Faulty<_valueType>::value' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(194): note: see declaration of 'Faulty<_valueType>::value'
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultsimulator.hpp(219): note: see reference to class template instantiation 'FaultyLine<_valueType>' being compiled
          with
          [
              _valueType=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\value.hpp(56): warning C4305: 'default argument': truncation from 'unsigned __int64' to '_width'
          with
          [
              _width=bool
          ]
c:\lab2\eda2.0\open eda 2.0\main\main.cpp(139): warning C4244: 'argument': conversion from 'double' to 'size_t', possible loss of data
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'SimulationNode<_valueType>::SimulationNode<_valueType>::clone' via dominance
          with
          [
              _width=FaultyValue<unsigned __int64>
          ]
          and
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
          and
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\simulationstructures.hpp(154): note: see declaration of 'SimulationNode<_valueType>::clone'
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(80): note: see reference to class template instantiation 'COPNode<_width>' being compiled
          with
          [
              _width=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(163): note: see reference to class template instantiation 'COP_TPI_Node<FaultyValue<unsigned __int64>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'COP::COP::removeInputConnection' via dominance
          with
          [
              _width=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(423): note: see declaration of 'COP::removeInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'COP::COP::removeOutputConnection' via dominance
          with
          [
              _width=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(428): note: see declaration of 'COP::removeOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'COP::COP::addInputConnection' via dominance
          with
          [
              _width=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(433): note: see declaration of 'COP::addInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'COP::COP::addOutputConnection' via dominance
          with
          [
              _width=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(438): note: see declaration of 'COP::addOutputConnection'
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(141): warning C4250: 'COP_TPI_Node<FaultyValue<unsigned __int64>>': inherits 'FaultyNode<_width>::FaultyNode<_width>::clone' via dominance
          with
          [
              _width=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultstructures.hpp(113): note: see declaration of 'FaultyNode<_width>::clone'
          with
          [
              _width=FaultyValue<unsigned __int64>
          ]
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(141): warning C4250: 'COP_TPI_Node<FaultyValue<unsigned __int64>>': inherits 'COP::COP::removeInputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(423): note: see declaration of 'COP::removeInputConnection'
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(141): warning C4250: 'COP_TPI_Node<FaultyValue<unsigned __int64>>': inherits 'COP::COP::removeOutputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(428): note: see declaration of 'COP::removeOutputConnection'
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(141): warning C4250: 'COP_TPI_Node<FaultyValue<unsigned __int64>>': inherits 'COP::COP::addInputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(433): note: see declaration of 'COP::addInputConnection'
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(141): warning C4250: 'COP_TPI_Node<FaultyValue<unsigned __int64>>': inherits 'COP::COP::addOutputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(438): note: see declaration of 'COP::addOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'SimulationLine<_primitive>::SimulationLine<_primitive>::clone' via dominance
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
          and
          [
              _primitive=FaultyValue<unsigned __int64>
          ]
          and
          [
              _primitive=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\simulationstructures.hpp(72): note: see declaration of 'SimulationLine<_primitive>::clone'
          with
          [
              _primitive=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(31): note: see reference to class template instantiation 'COPLine<_valueType>' being compiled
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(163): note: see reference to class template instantiation 'COP_TPI_Line<FaultyValue<unsigned __int64>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'COP::COP::removeInputConnection' via dominance
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(423): note: see declaration of 'COP::removeInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'COP::COP::removeOutputConnection' via dominance
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(428): note: see declaration of 'COP::removeOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'COP::COP::addInputConnection' via dominance
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(433): note: see declaration of 'COP::addInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'COP::COP::addOutputConnection' via dominance
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(438): note: see declaration of 'COP::addOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultstructures.hpp(58): warning C4250: 'FaultyLine<_valueType>': inherits 'Faulty<_valueType>::Faulty<_valueType>::value' via dominance
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(194): note: see declaration of 'Faulty<_valueType>::value'
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(31): note: see reference to class template instantiation 'FaultyLine<_valueType>' being compiled
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(70): warning C4250: 'COP_TPI_Line<FaultyValue<unsigned __int64>>': inherits 'Faulty<_valueType>::Faulty<_valueType>::value' via dominance
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(194): note: see declaration of 'Faulty<_valueType>::value'
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(70): warning C4250: 'COP_TPI_Line<FaultyValue<unsigned __int64>>': inherits 'COP::COP::removeInputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(423): note: see declaration of 'COP::removeInputConnection'
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(70): warning C4250: 'COP_TPI_Line<FaultyValue<unsigned __int64>>': inherits 'COP::COP::removeOutputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(428): note: see declaration of 'COP::removeOutputConnection'
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(70): warning C4250: 'COP_TPI_Line<FaultyValue<unsigned __int64>>': inherits 'COP::COP::addInputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(433): note: see declaration of 'COP::addInputConnection'
c:\lab2\eda2.0\open eda 2.0\main\cop_tpi_structures.hpp(70): warning C4250: 'COP_TPI_Line<FaultyValue<unsigned __int64>>': inherits 'COP::COP::addOutputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(438): note: see declaration of 'COP::addOutputConnection'
c:\lab2\eda2.0\open eda 2.0\main\main.cpp(218): warning C4309: 'default argument': truncation of constant value
c:\lab2\eda2.0\open eda 2.0\main\main.cpp(240): warning C4101: 'finish': unreferenced local variable
c:\lab2\eda2.0\open eda 2.0\main\main.cpp(445): warning C4129: '%': unrecognized character escape sequence
c:\lab2\eda2.0\open eda 2.0\main\main.cpp(445): warning C4476: 'printf' : unknown type field character '_' in format specifier
c:\lab2\eda2.0\open eda 2.0\main\main.cpp(446): warning C4129: '%': unrecognized character escape sequence
c:\lab2\eda2.0\open eda 2.0\main\main.cpp(446): warning C4476: 'printf' : unknown type field character '_' in format specifier
c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(300): warning C4297: 'Fault<FaultyValue<bool>>::~Fault': function assumed not to throw an exception but does
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(300): note: destructor or deallocator has a (possibly implicit) non-throwing exception specification
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(298): note: while compiling class template member function 'Fault<FaultyValue<bool>>::~Fault(void)'
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultsimulator.hpp(219): note: see reference to class template instantiation 'Fault<FaultyValue<bool>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(300): warning C4297: 'Fault<_valueType>::~Fault': function assumed not to throw an exception but does
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(300): note: destructor or deallocator has a (possibly implicit) non-throwing exception specification
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(298): note: while compiling class template member function 'Fault<_valueType>::~Fault(void)'
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(385): note: see reference to class template instantiation 'Fault<_valueType>' being compiled
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(587): warning C4018: '<': signed/unsigned mismatch
  c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(549): note: while compiling class template member function 'std::vector<float,std::allocator<_Ty>> Window<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::getdata(Circuit *,Levelized *,int)'
          with
          [
              _Ty=float
          ]
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(435): note: see reference to function template instantiation 'std::vector<float,std::allocator<_Ty>> Window<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::getdata(Circuit *,Levelized *,int)' being compiled
          with
          [
              _Ty=float
          ]
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(427): note: see reference to class template instantiation 'Window<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(584): warning C4101: 'copline': unreferenced local variable
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\eventqueue.hpp(313): warning C4018: '<': signed/unsigned mismatch
  c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\eventqueue.hpp(305): note: while compiling class template member function 'bool EventQueue<_valueType>::process(void)'
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultsimulator.hpp(276): note: see reference to function template instantiation 'bool EventQueue<_valueType>::process(void)' being compiled
          with
          [
              _valueType=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultsimulator.hpp(241): note: while compiling class template member function 'std::vector<_valueType,std::allocator<_Ty>> FaultSimulator<_valueType>::applyStimulus(Circuit *,std::vector<_Ty,std::allocator<_Ty>>,EventQueue<_valueType>,std::vector<SimulationNode<_valueType> *,std::allocator<SimulationNode<_valueType>*>>,std::vector<SimulationNode<_valueType> *,std::allocator<SimulationNode<_valueType>*>>,std::vector<bool,std::allocator<bool>>)'
          with
          [
              _valueType=FaultyValue<unsigned __int64>,
              _Ty=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(132): note: see reference to function template instantiation 'std::vector<_valueType,std::allocator<_Ty>> FaultSimulator<_valueType>::applyStimulus(Circuit *,std::vector<_Ty,std::allocator<_Ty>>,EventQueue<_valueType>,std::vector<SimulationNode<_valueType> *,std::allocator<SimulationNode<_valueType>*>>,std::vector<SimulationNode<_valueType> *,std::allocator<SimulationNode<_valueType>*>>,std::vector<bool,std::allocator<bool>>)' being compiled
          with
          [
              _valueType=FaultyValue<unsigned __int64>,
              _Ty=FaultyValue<unsigned __int64>
          ]
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(128): note: see reference to class template instantiation 'FaultSimulator<FaultyValue<unsigned __int64>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.expand\includes\expand.hpp(220): warning C4018: '<': signed/unsigned mismatch
  c:\lab2\eda2.0\open eda 2.0\openeda.expand\includes\expand.hpp(215): note: while compiling class template member function 'Circuit *Expand<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::Expand_nodeout(Circuit *,Levelized *)'
  c:\lab2\eda2.0\open eda 2.0\openeda.expand\includes\expand.hpp(132): note: see reference to function template instantiation 'Circuit *Expand<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::Expand_nodeout(Circuit *,Levelized *)' being compiled
  c:\lab2\eda2.0\open eda 2.0\openeda.expand\includes\expand.hpp(106): note: while compiling class template member function 'Circuit *Expand<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::Expand_in(Circuit *)'
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(420): note: see reference to function template instantiation 'Circuit *Expand<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::Expand_in(Circuit *)' being compiled
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(419): note: see reference to class template instantiation 'Expand<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.expand\includes\expand.hpp(271): warning C4018: '<': signed/unsigned mismatch
c:\lab2\eda2.0\open eda 2.0\openeda.expand\includes\expand.hpp(305): warning C4018: '<': signed/unsigned mismatch
c:\lab2\eda2.0\open eda 2.0\openeda.expand\includes\expand.hpp(368): warning C4018: '<': signed/unsigned mismatch
  c:\lab2\eda2.0\open eda 2.0\openeda.expand\includes\expand.hpp(332): note: while compiling class template member function 'Circuit *Expand<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::Expand_nodein(Circuit *,Levelized *)'
  c:\lab2\eda2.0\open eda 2.0\openeda.expand\includes\expand.hpp(113): note: see reference to function template instantiation 'Circuit *Expand<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::Expand_nodein(Circuit *,Levelized *)' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(139): warning C4018: '<': signed/unsigned mismatch
  c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(125): note: while compiling class template member function 'std::vector<_nodeType *,std::allocator<_Kty>> Window<FaultyValue<unsigned __int64>,_nodeType,COP_TPI_Line<FaultyValue<unsigned __int64>>>::backtrace_node(Circuit *,_nodeType *,int)'
          with
          [
              _nodeType=COP_TPI_Node<FaultyValue<unsigned __int64>>,
              _Kty=COP_TPI_Node<FaultyValue<unsigned __int64>> *
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(299): note: see reference to function template instantiation 'std::vector<_nodeType *,std::allocator<_Kty>> Window<FaultyValue<unsigned __int64>,_nodeType,COP_TPI_Line<FaultyValue<unsigned __int64>>>::backtrace_node(Circuit *,_nodeType *,int)' being compiled
          with
          [
              _nodeType=COP_TPI_Node<FaultyValue<unsigned __int64>>,
              _Kty=COP_TPI_Node<FaultyValue<unsigned __int64>> *
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(289): note: while compiling class template member function 'Circuit *Window<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::Getwindow(Circuit *,Levelized *,int)'
  c:\lab2\eda2.0\open eda 2.0\main\main.cpp(428): note: see reference to function template instantiation 'Circuit *Window<FaultyValue<unsigned __int64>,COP_TPI_Node<FaultyValue<unsigned __int64>>,COP_TPI_Line<FaultyValue<unsigned __int64>>>::Getwindow(Circuit *,Levelized *,int)' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(190): warning C4018: '>=': signed/unsigned mismatch
c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(218): warning C4018: '<': signed/unsigned mismatch
  c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(205): note: while compiling class template member function 'std::vector<_nodeType *,std::allocator<_Kty>> Window<FaultyValue<unsigned __int64>,_nodeType,COP_TPI_Line<FaultyValue<unsigned __int64>>>::forward_node(Circuit *,_nodeType *,int)'
          with
          [
              _nodeType=COP_TPI_Node<FaultyValue<unsigned __int64>>,
              _Kty=COP_TPI_Node<FaultyValue<unsigned __int64>> *
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(301): note: see reference to function template instantiation 'std::vector<_nodeType *,std::allocator<_Kty>> Window<FaultyValue<unsigned __int64>,_nodeType,COP_TPI_Line<FaultyValue<unsigned __int64>>>::forward_node(Circuit *,_nodeType *,int)' being compiled
          with
          [
              _nodeType=COP_TPI_Node<FaultyValue<unsigned __int64>>,
              _Kty=COP_TPI_Node<FaultyValue<unsigned __int64>> *
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.window\includes\window.hpp(277): warning C4018: '>=': signed/unsigned mismatch
  Generating code
  0 of 5680 functions ( 0.0%) were compiled, the rest were copied from previous compilation.
    0 functions were new in current compilation
    0 functions had inline decision re-evaluated but remain unchanged
  Finished generating code
  main.vcxproj -> C:\lab2\EDA2.0\Open EDA 2.0\Release\main.exe
