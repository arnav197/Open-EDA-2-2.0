cl : Command line warning D9035: option 'Gm' has been deprecated and will be removed in a future release
  test.cpp
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\internal\gtest-port.h(996): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\internal\gtest-port.h(997): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\internal\gtest-port.h(998): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\internal\gtest-port.h(999): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\internal\gtest-port.h(1000): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(600): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(605): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(610): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(615): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(620): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(625): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(632): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(639): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(646): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(653): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(661): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(878): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
  c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(878): note: see reference to class template instantiation 'testing::internal::TuplePolicy<TupleT>::tuple_element<I>' being compiled
  c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(886): note: see reference to class template instantiation 'testing::internal::TuplePolicy<TupleT>' being compiled
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(882): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\tuple(1333): note: see declaration of 'std::tr1'
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\value.hpp(56): warning C4305: 'default argument': truncation from 'unsigned __int64' to '_width'
          with
          [
              _width=bool
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultstructures.hpp(58): warning C4250: 'FaultyLine<_valueType>': inherits 'Faulty<_valueType>::Faulty<_valueType>::value' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(194): note: see declaration of 'Faulty<_valueType>::value'
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultsimulator.hpp(219): note: see reference to class template instantiation 'FaultyLine<_valueType>' being compiled
          with
          [
              _valueType=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultyvalue.hpp(58): warning C4305: 'default argument': truncation from 'unsigned __int64' to '_primitive'
          with
          [
              _primitive=bool
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'SimulationNode<FaultyValue<bool>>::SimulationNode<FaultyValue<bool>>::clone' via dominance
          with
          [
              _width=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\simulationstructures.hpp(154): note: see declaration of 'SimulationNode<FaultyValue<bool>>::clone'
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(61): note: see reference to class template instantiation 'COPNode<_width>' being compiled
          with
          [
              _width=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(227): note: see reference to class template instantiation 'COP_TPI_Node<FaultyValue<bool>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'COP::COP::removeInputConnection' via dominance
          with
          [
              _width=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(423): note: see declaration of 'COP::removeInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'COP::COP::removeOutputConnection' via dominance
          with
          [
              _width=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(428): note: see declaration of 'COP::removeOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'COP::COP::addInputConnection' via dominance
          with
          [
              _width=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(433): note: see declaration of 'COP::addInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(314): warning C4250: 'COPNode<_width>': inherits 'COP::COP::addOutputConnection' via dominance
          with
          [
              _width=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(438): note: see declaration of 'COP::addOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(108): warning C4250: 'COP_TPI_Node<FaultyValue<bool>>': inherits 'FaultyNode<_width>::FaultyNode<_width>::clone' via dominance
          with
          [
              _width=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultstructures.hpp(113): note: see declaration of 'FaultyNode<_width>::clone'
          with
          [
              _width=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(108): warning C4250: 'COP_TPI_Node<FaultyValue<bool>>': inherits 'COP::COP::removeInputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(423): note: see declaration of 'COP::removeInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(108): warning C4250: 'COP_TPI_Node<FaultyValue<bool>>': inherits 'COP::COP::removeOutputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(428): note: see declaration of 'COP::removeOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(108): warning C4250: 'COP_TPI_Node<FaultyValue<bool>>': inherits 'COP::COP::addInputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(433): note: see declaration of 'COP::addInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(108): warning C4250: 'COP_TPI_Node<FaultyValue<bool>>': inherits 'COP::COP::addOutputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(438): note: see declaration of 'COP::addOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'SimulationLine<_valueType>::SimulationLine<_valueType>::clone' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\simulationstructures.hpp(72): note: see declaration of 'SimulationLine<_valueType>::clone'
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(29): note: see reference to class template instantiation 'COPLine<_valueType>' being compiled
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(227): note: see reference to class template instantiation 'COP_TPI_Line<FaultyValue<bool>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'COP::COP::removeInputConnection' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(423): note: see declaration of 'COP::removeInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'COP::COP::removeOutputConnection' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(428): note: see declaration of 'COP::removeOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'COP::COP::addInputConnection' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(433): note: see declaration of 'COP::addInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(233): warning C4250: 'COPLine<_valueType>': inherits 'COP::COP::addOutputConnection' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(438): note: see declaration of 'COP::addOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(51): warning C4250: 'COP_TPI_Line<FaultyValue<bool>>': inherits 'Faulty<_valueType>::Faulty<_valueType>::value' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(194): note: see declaration of 'Faulty<_valueType>::value'
          with
          [
              _valueType=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(51): warning C4250: 'COP_TPI_Line<FaultyValue<bool>>': inherits 'COP::COP::removeInputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(423): note: see declaration of 'COP::removeInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(51): warning C4250: 'COP_TPI_Line<FaultyValue<bool>>': inherits 'COP::COP::removeOutputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(428): note: see declaration of 'COP::removeOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(51): warning C4250: 'COP_TPI_Line<FaultyValue<bool>>': inherits 'COP::COP::addInputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(433): note: see declaration of 'COP::addInputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(51): warning C4250: 'COP_TPI_Line<FaultyValue<bool>>': inherits 'COP::COP::addOutputConnection' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(438): note: see declaration of 'COP::addOutputConnection'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c432.hpp(86): warning C4244: 'argument': conversion from 'double' to 'size_t', possible loss of data
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_moghaddam_c17.hpp(27): warning C4005: 'LINETYPE': macro redefinition
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(28): note: see previous definition of 'LINETYPE'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_moghaddam_c17.hpp(28): warning C4005: 'NODETYPE': macro redefinition
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(27): note: see previous definition of 'NODETYPE'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(546): warning C4250: 'Moghaddam_Node<FaultyValue<bool>>': inherits 'Faulty<_valueType>::Faulty<_valueType>::value' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(194): note: see declaration of 'Faulty<_valueType>::value'
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_moghaddam_c17.hpp(175): note: see reference to class template instantiation 'Moghaddam_Node<FaultyValue<bool>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(546): warning C4250: 'Moghaddam_Node<FaultyValue<bool>>': inherits 'FaultyNode<_width>::FaultyNode<_width>::clone' via dominance
          with
          [
              _width=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultstructures.hpp(113): note: see declaration of 'FaultyNode<_width>::clone'
          with
          [
              _width=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(546): warning C4250: 'Moghaddam_Node<FaultyValue<bool>>': inherits 'Moghaddam<_primitive>::Moghaddam<_primitive>::removeInputConnection' via dominance
          with
          [
              _primitive=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(250): note: see declaration of 'Moghaddam<_primitive>::removeInputConnection'
          with
          [
              _primitive=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(546): warning C4250: 'Moghaddam_Node<FaultyValue<bool>>': inherits 'Moghaddam<_primitive>::Moghaddam<_primitive>::removeOutputConnection' via dominance
          with
          [
              _primitive=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(263): note: see declaration of 'Moghaddam<_primitive>::removeOutputConnection'
          with
          [
              _primitive=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(546): warning C4250: 'Moghaddam_Node<FaultyValue<bool>>': inherits 'Moghaddam<_primitive>::Moghaddam<_primitive>::addInputConnection' via dominance
          with
          [
              _primitive=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(273): note: see declaration of 'Moghaddam<_primitive>::addInputConnection'
          with
          [
              _primitive=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(546): warning C4250: 'Moghaddam_Node<FaultyValue<bool>>': inherits 'Moghaddam<_primitive>::Moghaddam<_primitive>::addOutputConnection' via dominance
          with
          [
              _primitive=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(283): note: see declaration of 'Moghaddam<_primitive>::addOutputConnection'
          with
          [
              _primitive=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(375): warning C4250: 'Moghaddam_Line<FaultyValue<bool>>': inherits 'Faulty<_valueType>::Faulty<_valueType>::value' via dominance
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(194): note: see declaration of 'Faulty<_valueType>::value'
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_moghaddam_c17.hpp(181): note: see reference to class template instantiation 'Moghaddam_Line<FaultyValue<bool>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(375): warning C4250: 'Moghaddam_Line<FaultyValue<bool>>': inherits 'COP_TPI_Line<FaultyValue<bool>>::COP_TPI_Line<FaultyValue<bool>>::clone' via dominance
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\cop_tpi_structures.hpp(48): note: see declaration of 'COP_TPI_Line<FaultyValue<bool>>::clone'
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(375): warning C4250: 'Moghaddam_Line<FaultyValue<bool>>': inherits 'Moghaddam<_primitive>::Moghaddam<_primitive>::removeInputConnection' via dominance
          with
          [
              _primitive=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(250): note: see declaration of 'Moghaddam<_primitive>::removeInputConnection'
          with
          [
              _primitive=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(375): warning C4250: 'Moghaddam_Line<FaultyValue<bool>>': inherits 'Moghaddam<_primitive>::Moghaddam<_primitive>::removeOutputConnection' via dominance
          with
          [
              _primitive=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(263): note: see declaration of 'Moghaddam<_primitive>::removeOutputConnection'
          with
          [
              _primitive=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(375): warning C4250: 'Moghaddam_Line<FaultyValue<bool>>': inherits 'Moghaddam<_primitive>::Moghaddam<_primitive>::addInputConnection' via dominance
          with
          [
              _primitive=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(273): note: see declaration of 'Moghaddam<_primitive>::addInputConnection'
          with
          [
              _primitive=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(375): warning C4250: 'Moghaddam_Line<FaultyValue<bool>>': inherits 'Moghaddam<_primitive>::Moghaddam<_primitive>::addOutputConnection' via dominance
          with
          [
              _primitive=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(283): note: see declaration of 'Moghaddam<_primitive>::addOutputConnection'
          with
          [
              _primitive=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(487): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(470): note: while compiling class template member function 'float Moghaddam_Node<FaultyValue<bool>>::forwardBlocking(bool)'
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_moghaddam_c17.hpp(175): note: see reference to class template instantiation 'Moghaddam_Node<FaultyValue<bool>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(490): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(493): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
c:\lab2\eda2.0\open eda 2.0\openeda.tpi\includes\moghaddam_structures.hpp(496): warning C4244: 'return': conversion from 'double' to 'float', possible loss of data
c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(875): warning C4996: 'std::tr1': warning STL4002: The non-Standard std::tr1 namespace and TR1-only machinery are deprecated and will be REMOVED. You can define _SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING to acknowledge that you have received this warning.
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\random(6448): note: see declaration of 'std::tr1'
  c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(961): note: see reference to class template instantiation 'testing::internal::TuplePolicy<Tuple>' being compiled
          with
          [
              Tuple=std::tuple<>
          ]
  c:\lab2\eda2.0\open eda 2.0\packages\microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0\build\native\include\gtest\gtest-printers.h(601): note: see reference to function template instantiation 'void testing::internal::PrintTupleTo<std::tuple<>>(const T &,std::ostream *)' being compiled
          with
          [
              T=std::tuple<>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(300): warning C4297: 'Fault<FaultyValue<bool>>::~Fault': function assumed not to throw an exception but does
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(300): note: destructor or deallocator has a (possibly implicit) non-throwing exception specification
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\fault.hpp(298): note: while compiling class template member function 'Fault<FaultyValue<bool>>::~Fault(void)'
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultsimulator.hpp(219): note: see reference to class template instantiation 'Fault<FaultyValue<bool>>' being compiled
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility(173): warning C4244: 'initializing': conversion from '_Ty' to '_Ty2', possible loss of data
          with
          [
              _Ty=double
          ]
          and
          [
              _Ty2=float
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(159): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const char(&)[5],double,0>(_Other1,_Other2 &&) noexcept(false)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=float,
              _Other1=const char (&)[5],
              _Other2=double
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(85): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const char(&)[5],double,0>(_Other1,_Other2 &&) noexcept(false)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=float,
              _Other1=const char (&)[5],
              _Other2=double
          ]
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility(173): warning C4244: 'initializing': conversion from '_Ty' to '_Ty2', possible loss of data
          with
          [
              _Ty=int
          ]
          and
          [
              _Ty2=float
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(159): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const char(&)[5],int,0>(_Other1,_Other2 &&) noexcept(false)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=float,
              _Other1=const char (&)[5],
              _Other2=int
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(85): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<const char(&)[5],int,0>(_Other1,_Other2 &&) noexcept(false)' being compiled
          with
          [
              _Kty=std::string,
              _Ty=float,
              _Other1=const char (&)[5],
              _Other2=int
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.prpg\includes\prpg.hpp(161): warning C4805: '&': unsafe mix of type 'unsigned __int64' and type '_width' in operation
          with
          [
              _width=bool
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.prpg\includes\prpg.hpp(130): note: while compiling class template member function 'std::vector<_valueType,std::allocator<_Ty>> PRPG<_valueType>::increment(void)'
          with
          [
              _valueType=FaultyValue<bool>,
              _Ty=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c432.hpp(105): note: see reference to function template instantiation 'std::vector<_valueType,std::allocator<_Ty>> PRPG<_valueType>::increment(void)' being compiled
          with
          [
              _valueType=FaultyValue<bool>,
              _Ty=FaultyValue<bool>
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\eventqueue.hpp(313): warning C4018: '<': signed/unsigned mismatch
  c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\eventqueue.hpp(305): note: while compiling class template member function 'bool EventQueue<_valueType>::process(void)'
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultsimulator.hpp(276): note: see reference to function template instantiation 'bool EventQueue<_valueType>::process(void)' being compiled
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.faults\includes\faultsimulator.hpp(241): note: while compiling class template member function 'std::vector<_valueType,std::allocator<_Ty>> FaultSimulator<_valueType>::applyStimulus(Circuit *,std::vector<_Ty,std::allocator<_Ty>>,EventQueue<_valueType>,std::vector<SimulationNode<FaultyValue<bool>> *,std::allocator<SimulationNode<FaultyValue<bool>>*>>,std::vector<SimulationNode<FaultyValue<bool>> *,std::allocator<SimulationNode<FaultyValue<bool>>*>>,std::vector<bool,std::allocator<bool>>)'
          with
          [
              _valueType=FaultyValue<bool>,
              _Ty=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(314): note: see reference to function template instantiation 'std::vector<_valueType,std::allocator<_Ty>> FaultSimulator<_valueType>::applyStimulus(Circuit *,std::vector<_Ty,std::allocator<_Ty>>,EventQueue<_valueType>,std::vector<SimulationNode<FaultyValue<bool>> *,std::allocator<SimulationNode<FaultyValue<bool>>*>>,std::vector<SimulationNode<FaultyValue<bool>> *,std::allocator<SimulationNode<FaultyValue<bool>>*>>,std::vector<bool,std::allocator<bool>>)' being compiled
          with
          [
              _valueType=FaultyValue<bool>,
              _Ty=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.tpi\tests\tpi_c17.hpp(309): note: see reference to class template instantiation 'FaultSimulator<FaultyValue<bool>>' being compiled
c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(515): warning C4305: 'argument': truncation from 'unsigned __int64' to '_primitive'
          with
          [
              _primitive=bool
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\valuevectorfunctions.hpp(214): warning C4305: 'argument': truncation from 'unsigned __int64' to '_primitive'
          with
          [
              _primitive=bool
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\valuevectorfunctions.hpp(196): note: while compiling class template member function 'std::vector<_valueType,std::allocator<_Ty>> ValueVectorFunction<_valueType>::incrementingConstants(size_t)'
          with
          [
              _valueType=FaultyValue<bool>,
              _Ty=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\valuevectorfunctions.hpp(141): note: see reference to function template instantiation 'std::vector<_valueType,std::allocator<_Ty>> ValueVectorFunction<_valueType>::incrementingConstants(size_t)' being compiled
          with
          [
              _valueType=FaultyValue<bool>,
              _Ty=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(516): note: see reference to class template instantiation 'ValueVectorFunction<_valueType>' being compiled
          with
          [
              _valueType=FaultyValue<bool>
          ]
  c:\lab2\eda2.0\open eda 2.0\openeda.cop\includes\copstructures.hpp(590): note: see reference to function template instantiation 'float manualCOP<_width>(COPNode<_width> *,std::vector<float,std::allocator<_Ty>>)' being compiled
          with
          [
              _width=FaultyValue<bool>,
              _Ty=float
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\valuevectorfunctions.hpp(215): warning C4305: 'argument': truncation from 'unsigned __int64' to '_primitive'
          with
          [
              _primitive=bool
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\valuevectorfunctions.hpp(216): warning C4305: 'argument': truncation from 'unsigned __int64' to '_primitive'
          with
          [
              _primitive=bool
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\valuevectorfunctions.hpp(217): warning C4305: 'argument': truncation from 'unsigned __int64' to '_primitive'
          with
          [
              _primitive=bool
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\valuevectorfunctions.hpp(218): warning C4305: 'argument': truncation from 'unsigned __int64' to '_primitive'
          with
          [
              _primitive=bool
          ]
c:\lab2\eda2.0\open eda 2.0\openeda.simulation\includes\valuevectorfunctions.hpp(219): warning C4305: 'argument': truncation from 'unsigned __int64' to '_primitive'
          with
          [
              _primitive=bool
          ]
  OpenEDA.TPI.tests.vcxproj -> C:\lab2\EDA2.0\Open EDA 2.0\Debug\OpenEDA.TPI.tests.exe
